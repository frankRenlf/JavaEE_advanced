<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.frank.new_blog.mapper.ArticleMapper">
    <resultMap id="BaseMap" type="com.frank.new_blog.domain.Article">
        <id column="id" property="articleId"></id>
        <result column="title" property="title"></result>
        <result column="content" property="content"></result>
        <result column="createtime" property="createTime"></result>
        <result column="updatetime" property="updateTime"></result>
        <result column="uid" property="uid"></result>
        <result column="rcount" property="rcount"></result>
        <result column="state" property="state"/>
        <association property="user"
                     resultMap="com.frank.new_blog.mapper.UserMapper.BaseMap"
                     columnPrefix="u_">
        </association>
    </resultMap>
    <update id="addRcount">
        update articleinfo
        set rcount = #{rcount}
        where id = #{id}
    </update>

    <insert id="myInsert" useGeneratedKeys="true" keyProperty="articleId">
        insert into articleinfo(title, content, uid)
        values (#{title}, #{content}, #{uid})
    </insert>
    <update id="myUpdate" useGeneratedKeys="true" keyProperty="articleId">
        update articleinfo
        set title      = #{title},
            content    = #{content},
            updatetime = now()
        where id = #{articleId}
    </update>
    <delete id="myRemoveById">
        delete
        from articleinfo
        where id = #{id}
    </delete>

    <select id="mySelectById" resultType="com.frank.new_blog.domain.Article" resultMap="BaseMap">
        select *
        from articleinfo
        where id = #{id}
    </select>
    <select id="myList" resultType="com.frank.new_blog.domain.Article" resultMap="BaseMap">
        select *
        from articleinfo
        where uid = #{uid}
        order by id ${order}
    </select>
    <select id="myFindByTitle" resultType="com.frank.new_blog.domain.Article" resultMap="BaseMap">
        select *
        from articleinfo
        where title like concat('%', #{title}, '%')
    </select>
    <select id="mySelectByIdUser" resultType="com.frank.new_blog.domain.Article" resultMap="BaseMap">
        select a.*,
               u.id         u_id,
               u.username   u_username,
               u.photo      u_photo,
               u.createtime u_createtime,
               u.updatetime u_updatetime
        from articleinfo a
                 left join userinfo u on a.uid = u.id
        where a.id = #{id}
    </select>
    <select id="mySelectByParams" resultType="com.frank.new_blog.domain.Article" resultMap="BaseMap"
            parameterType="com.frank.new_blog.domain.Article">
        select *
        from articleinfo
        <trim prefix="where" prefixOverrides="and" suffix="" suffixOverrides="">
            <if test="title != null">
                and title like concat('%', #{title}, '%')
            </if>
            <if test="createTime != null">
                and createtime <![CDATA[ >= ]]>  #{createTime}
            </if>
            <if test="updateTime != null">
                and updatetime <![CDATA[ <= ]]> #{updateTime}
            </if>
        </trim>

    </select>
    <select id="listAll" resultType="com.frank.new_blog.domain.Article" resultMap="BaseMap">
        select *
        from articleinfo
        order by id ${order}
    </select>
    <select id="countByUserid" resultType="java.lang.Integer">
        select count(*)
        from articleinfo
        where uid = #{uid}
    </select>
    <select id="pagingList" resultType="com.frank.new_blog.domain.Article" resultMap="BaseMap">
        select *
        from articleinfo
        order by id ${order}
        limit #{limit}
        offset #{offset}

    </select>
    <select id="count" resultType="java.lang.Integer">
        select count(*)
        from articleinfo
    </select>
    <delete id="myDeleteListId">
        delete from articleinfo where id in
        <foreach collection="listId" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
